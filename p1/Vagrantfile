# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"

  # MASTER NODE
  config.vm.define "k3s-master" do |k3s|
    k3s.vm.hostname = "k3s-master"
    k3s.vm.network "private_network", ip: "192.168.42.110"
    k3s.vm.network "forwarded_port", guest: 6443, host: 6443, host_ip: "0.0.0.0"
    k3s.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.name = "my-sexy-homestead-box-master"
      vb.memory = "1024"
      vb.cpus = 2
    end
    k3s.vm.provision "shell", inline: <<-SHELL
      curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--write-kubeconfig-mode 644" sh -
      NODE_TOKEN="/var/lib/rancher/k3s/server/node-token"
      while [ ! -e ${NODE_TOKEN} ]
      do
        echo "Waiting for node token..."
      done
    SHELL
  end

  # WORKER NODE
  config.vm.define "k3s-worker" do |k3s|
    k3s.vm.hostname = "k3s-worker"
    k3s.vm.network "private_network", ip: "192.168.42.111"
    k3s.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.name = "my-sexy-homestead-box-worker"
      vb.memory = "1024"
      vb.cpus = 2
    end
    # k3s.vm.provision "shell", inline: <<-SHELL
    #   NODE_TOKEN="/var/lib/rancher/k3s/server/node-token"
    #   while [ ! -e ${NODE_TOKEN} ]
    #   do
    #     echo "Waiting for node token..."
    #   done
    #   curl -sfL https://get.k3s.io | K3S_TOKEN=${NODE_TOKEN} K3S_URL=https://192.168.42.110:6443 sh -
    # SHELL
  end


  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.42.110"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # config.vm.provider "virtualbox" do |vb|
  #   vb.gui = true
  #   vb.name = "my-sexy-homestead-box-S"
  #   vb.memory = "1024"
  #   vb.cpus = 2
  # end

  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
    # apt-get update
    # apt-get install -y apache2
  #   curl -sfL https://get.k3s.io |  sh -
  # SHELL

  # Run shell script when we provision a new machine
  # config.vm.provision "k3s shell script", type: "shell",
  #   path: "k3s.sh"
end
